/*
 * Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.netcrest.pado.test.junit.context.impl;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

import com.gemstone.gemfire.DataSerializable;
import com.gemstone.gemfire.DataSerializer;
import com.netcrest.pado.IGridService;
import com.netcrest.pado.internal.factory.ContextInfoFactory;
import com.netcrest.pado.test.junit.context.IPbmUserContext;
import com.netcrest.pado.test.junit.context.IPbmUserInfo;


public class PbmUserContextImpl implements IPbmUserContext, DataSerializable
{
	private static final long serialVersionUID = 1L;
	
	private Object token;
	private String username;
	private IPbmUserInfo userInfo = (IPbmUserInfo)ContextInfoFactory.createUserInfo();
	private HashSet<IPbmUserInfo> secondaryUserInfoSet = new HashSet(2);
	private transient IGridService gridService;

	public PbmUserContextImpl()
	{
	}
	
	@Override
	public void initialize(IGridService gridService)
	{
		this.gridService = gridService;
	}

	@Override
	public Object getToken()
	{
		if (gridService == null) {
			return token;
		} else {
			return gridService.getToken();
		}
	}
	
	@Override
	public String getUsername()
	{
		if (gridService == null) {
			return username;
		} else {
			return gridService.getUsername();
		}
	}

	@Override
	public IPbmUserInfo getUserInfo()
	{
		return userInfo;
	}

	@Override
	public void addSecondaryUserInfo(IPbmUserInfo userInfo)
	{
		if (userInfo == null) {
			return;
		}
		secondaryUserInfoSet.add(userInfo);
	}

	@Override
	public Set<IPbmUserInfo> getSecondaryUserInfoSet()
	{
		return secondaryUserInfoSet;
	}

	@Override
	public void reset()
	{
		userInfo.reset();
		secondaryUserInfoSet.clear();
	}

	/**
	 * Reads the state of this object from the given <code>DataInput</code>.
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void fromData(DataInput input) throws IOException, ClassNotFoundException
	{
		token = DataSerializer.readObject(input);
		userInfo = DataSerializer.readObject(input);
		secondaryUserInfoSet = DataSerializer.readHashSet(input);
	}

	/**
	 * Writes the state of this object to the given <code>DataOutput</code>.
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void toData(DataOutput output) throws IOException
	{
		DataSerializer.writeObject(getToken(), output);
		DataSerializer.writeObject(userInfo, output);
		DataSerializer.writeHashSet(secondaryUserInfoSet, output);
	}
}
