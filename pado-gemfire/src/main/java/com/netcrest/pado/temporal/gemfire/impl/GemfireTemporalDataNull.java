/*
 * Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.netcrest.pado.temporal.gemfire.impl;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import java.util.LinkedList;

import com.gemstone.gemfire.DataSerializable;
import com.gemstone.gemfire.DataSerializer;
import com.netcrest.pado.temporal.ITemporalDataSerializable;
import com.netcrest.pado.temporal.ITemporalKey;
import com.netcrest.pado.temporal.gemfire.TemporalDataNull;

/**
 * TemporalDataNull used as a null value in temporal regions.
 * @author dpark
 *
 */
public class GemfireTemporalDataNull<K, V> extends TemporalDataNull<K, V> implements ITemporalDataSerializable<K>, DataSerializable
{
	private static final long serialVersionUID = 1L;

	public GemfireTemporalDataNull()
	{
	}
	
	public GemfireTemporalDataNull(ITemporalKey<K> temporalKey, V value)
	{
		this.temporalValue = new GemfireTemporalValue<K>(temporalKey, this);
	}
	
	public GemfireTemporalDataNull(GemfireTemporalDataNull<K, V> data, LinkedList<byte[]> deltaList)
	{
		temporalValue = new GemfireTemporalValue<K>(this, data, deltaList);
	}
	
	/**
	 * Writes the state of this object to the given <code>DataOutput</code>.
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void toData(DataOutput output) throws IOException
	{
		DataSerializer.writeObject(temporalValue, output);
	}

	/**
	 * Reads the state of this object from the given <code>DataInput</code>.
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void fromData(DataInput input) throws IOException, ClassNotFoundException
	{
		temporalValue = DataSerializer.readObject(input);
		if (temporalValue != null) {
			temporalValue.setData(this);
		}
	}

	@Override
	public void readTemporal(DataInput input) throws IOException, ClassNotFoundException
	{	
	}

	@Override
	public void writeTemporal(DataOutput output) throws IOException
	{
	}

	@Override
	public void readTemporalAttributes(DataInput input) throws IOException, ClassNotFoundException
	{
	}

	@Override
	public void writeTemporalAttributes(DataOutput output) throws IOException
	{
	}
}
