/*
 * Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.netcrest.pado.index.internal;

import java.util.UUID;
import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import com.gemstone.gemfire.DataSerializable;
import com.gemstone.gemfire.DataSerializer;

public class MemberRequest extends MemberFilter implements DataSerializable
{
	private static final long serialVersionUID = 1L;
	
	public final static byte CURRENT_SET = 0;
	public final static byte NEXT_SET = 1;
	public final static byte PREVIOUS_SET = 2;
	
	private String queryString;
	private boolean orderBy;
	private int fetchSize = 100;
	
	private byte requestType = NEXT_SET;

	public MemberRequest()
	{
		super();
	}

	public MemberRequest(UUID id, int startIndex, int targetSize, boolean orderBy)
	{
		super();
		setId(id);
		this.orderBy = orderBy;
		setStartIndex(startIndex);
		setTargetSize(targetSize);
	}

	public String getQueryString()
	{
		return queryString;
	}

	public void setQueryString(String queryString)
	{
		this.queryString = queryString;
	}

	public boolean isOrderBy()
	{
		return orderBy;
	}

	public void setOrderBy(boolean orderBy)
	{
		this.orderBy = orderBy;
	}

	public int getFetchSize()
	{
		return fetchSize;
	}

	public void setFetchSize(int fetchSize)
	{
		this.fetchSize = fetchSize;
	}

	public byte getRequestType()
	{
		return requestType;
	}

	public void setRequestType(byte requestType)
	{
		this.requestType = requestType;
	}

	/**
	 * Reads the state of this object from the given <code>DataInput</code>.
	 * 
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void fromData(DataInput input) throws IOException, ClassNotFoundException
	{
		super.fromData(input);
		queryString = DataSerializer.readString(input);
		orderBy = DataSerializer.readPrimitiveBoolean(input);
		fetchSize = DataSerializer.readPrimitiveInt(input);
		requestType = DataSerializer.readPrimitiveByte(input);
	}

	/**
	 * Writes the state of this object to the given <code>DataOutput</code>.
	 * 
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void toData(DataOutput output) throws IOException
	{
		super.toData(output);
		DataSerializer.writeString(queryString, output);
		DataSerializer.writePrimitiveBoolean(orderBy, output);
		DataSerializer.writePrimitiveInt(fetchSize, output);
		DataSerializer.writePrimitiveByte(requestType, output);
	}

}
