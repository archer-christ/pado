/*
 * Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.netcrest.pado.index.result;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import java.util.List;

import com.gemstone.gemfire.DataSerializable;
import com.gemstone.gemfire.DataSerializer;

public class IndexMatrixResults implements DataSerializable
{
	private static final long serialVersionUID = 1L;
	private int bucketId;
	private List resultList;

	public int getBucketId()
	{
		return bucketId;
	}

	public void setBucketId(int bucketId)
	{
		this.bucketId = bucketId;
	}

	public List getResultList()
	{
		return resultList;
	}

	public void setResultList(List resultList)
	{
		this.resultList = resultList;
	}

	public Object getFirstValue()
	{
		if (resultList != null && resultList.size() > 0) {
			return resultList.get(0);
		} else {
			return null;
		}
	}
	
	public Object getLastValue()
	{
		if (resultList != null && resultList.size() > 0) {
			return resultList.get(resultList.size() - 1);
		} else {
			return null;
		}
	}

	public int getSize()
	{
		if (resultList != null) {
			return resultList.size();
		} else {
			return 0;
		}
	}

	@Override
	public String toString()
	{
		return "IndexMatrixResults [bucketId=" + bucketId + ", resultList=" + resultList + "]";
	}

	/**
	 * Reads the state of this object from the given <code>DataInput</code>.
	 * 
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void fromData(DataInput input) throws IOException, ClassNotFoundException
	{
		bucketId = DataSerializer.readPrimitiveInt(input);
		resultList = DataSerializer.readObject(input);
	}

	/**
	 * Writes the state of this object to the given <code>DataOutput</code>.
	 * 
	 */
	public void toData(DataOutput output) throws IOException
	{
		DataSerializer.writePrimitiveInt(bucketId, output);
		DataSerializer.writeObject(resultList, output);
	}

}
