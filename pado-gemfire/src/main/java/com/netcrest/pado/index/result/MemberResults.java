/*
 * Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.netcrest.pado.index.result;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.gemstone.gemfire.DataSerializable;
import com.gemstone.gemfire.DataSerializer;

public class MemberResults implements IMemberResults, DataSerializable {
	private static final long serialVersionUID = 402834025345L;
	private int bucketId;
	private int currentBatchIndexOnServer;
	private int nextBatchIndexOnServer;
	private int totalSizeOnServer;
	private List<ValueInfo> results;

	public int getBucketId() {
		return bucketId;
	}

	public void setBucketId(int bucketId) {
		this.bucketId = bucketId;
	}

	public int getCurrentBatchIndexOnServer() {
		return this.currentBatchIndexOnServer;
	}

	public void setCurrentBatchIndexOnServer(int currentBatchIndexOnServer) {
		this.currentBatchIndexOnServer = currentBatchIndexOnServer;
	}

	public int getNextBatchIndexOnServer() {
		return this.nextBatchIndexOnServer;
	}

	public void setNextBatchIndexOnServer(int nextBatchIndexOnServer) {
		this.nextBatchIndexOnServer = nextBatchIndexOnServer;
	}

	public int getTotalSizeOnServer() {
		return this.totalSizeOnServer;
	}

	public void setTotalSizeOnServer(int totalSizeOnServer) {
		this.totalSizeOnServer = totalSizeOnServer;
	}

	public void setResults(List<ValueInfo> resultList) {
		this.results = resultList;
	}

	/**
	 * Reads the state of this object from the given <code>DataInput</code>.
	 * 
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	@Override
	public void fromData(DataInput input) throws IOException,
			ClassNotFoundException {
		bucketId = DataSerializer.readPrimitiveInt(input);
		currentBatchIndexOnServer = DataSerializer.readPrimitiveInt(input);
		nextBatchIndexOnServer = DataSerializer.readPrimitiveInt(input);
		totalSizeOnServer = DataSerializer.readPrimitiveInt(input);
		results = DataSerializer.readArrayList(input);
	}

	/**
	 * Writes the state of this object to the given <code>DataOutput</code>.
	 * 
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	@Override
	public void toData(DataOutput output) throws IOException {
		DataSerializer.writePrimitiveInt(bucketId, output);
		DataSerializer.writePrimitiveInt(currentBatchIndexOnServer, output);
		DataSerializer.writePrimitiveInt(nextBatchIndexOnServer, output);
		DataSerializer.writePrimitiveInt(totalSizeOnServer, output);
		DataSerializer.writeArrayList((ArrayList)results, output);
	}

	@Override
	public List<? extends Object> getResults() {
		return results;
	}

}
