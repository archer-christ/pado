/*
 * Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.netcrest.pado.gemfire.info;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import com.gemstone.gemfire.DataSerializable;
import com.gemstone.gemfire.DataSerializer;
import com.netcrest.pado.info.BucketInfo;
import com.netcrest.pado.info.CacheInfo;
import com.netcrest.pado.info.ServerInfo;

/**
 * BucketInfo contains partitioned region bucket information. Note that
 * the server ID is not set by the server. It is caller's responsiblity to
 * set the server ID obtained from {@link CacheInfo#getId()} or {@link ServerInfo#getId()}.
 * @author dpark
 *
 */
public class GemfireBucketInfo extends BucketInfo implements DataSerializable
{
	private static final long serialVersionUID = 1L;

	public GemfireBucketInfo()
	{}
	
	public GemfireBucketInfo(int bucketId, boolean isPrimary, int size, long totalBytes)
	{
		super(bucketId, isPrimary, size, totalBytes);
	}

	/**
	 * Reads the state of this object from the given <code>DataInput</code>.
	 * 
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void fromData(DataInput input) throws IOException, ClassNotFoundException
	{
		bucketId = DataSerializer.readPrimitiveInt(input);
		isPrimary = DataSerializer.readBoolean(input);
		size = DataSerializer.readPrimitiveInt(input);
		totalBytes = DataSerializer.readPrimitiveLong(input);
	}

	/**
	 * Writes the state of this object to the given <code>DataOutput</code>.
	 * 
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void toData(DataOutput output) throws IOException
	{
		DataSerializer.writePrimitiveInt(bucketId, output);
		DataSerializer.writeBoolean(isPrimary, output);
		DataSerializer.writePrimitiveInt(size, output);
		DataSerializer.writePrimitiveLong(totalBytes, output);
	}
}
