/*
 * Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.netcrest.pado.gemfire.info;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import com.gemstone.gemfire.DataSerializable;
import com.gemstone.gemfire.DataSerializer;
import com.netcrest.pado.biz.info.MethodArgInfo;

public class GemfireMethodArgInfo extends MethodArgInfo implements DataSerializable
{
	private static final long serialVersionUID = 1L;

	public GemfireMethodArgInfo()
	{
	}

	public GemfireMethodArgInfo(String argName, String argType, String description, String defaultValue, String example,
			 boolean isRequired, MethodArgInfo[] nestedMethodArgInfos)
	{
		super(argName, argType, description, defaultValue, example, isRequired, nestedMethodArgInfos);
	}

	/**
	 * Reads the state of this object from the given <code>DataInput</code>.
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void fromData(DataInput input) throws IOException, ClassNotFoundException {
		argName = DataSerializer.readString(input);
		argType = DataSerializer.readString(input);
		description = DataSerializer.readString(input);
		defaultValue = DataSerializer.readString(input);
		example = DataSerializer.readString(input);
		nestedMethodArgInfos = DataSerializer.readObject(input);
		isRequired = DataSerializer.readPrimitiveBoolean(input);
	}

	/**
	 * Writes the state of this object to the given <code>DataOutput</code>.
	 * @gfcodegen This code is generated by gfcodegen.
	 */
	public void toData(DataOutput output) throws IOException {
		DataSerializer.writeString(argName, output);
		DataSerializer.writeString(argType, output);
		DataSerializer.writeString(description, output);
		DataSerializer.writeString(defaultValue, output);
		DataSerializer.writeString(example, output);
		DataSerializer.writeObject(nestedMethodArgInfos, output);
		DataSerializer.writePrimitiveBoolean(isRequired, output);
	}
}
