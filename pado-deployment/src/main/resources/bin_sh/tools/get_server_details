#!/bin/bash

# ========================================================================
# Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

pushd .. > /dev/null 2>&1
. ./setenv.sh > /dev/null 2>&1
. ./all_env.sh > /dev/null 2>&1
. ./argenv.sh > /dev/null 2>&1
. ${GRIDS_DIR}/${GRID}/site_${SITE}.sh > /dev/null 2>&1
popd > /dev/null 2>&1

# Check for script help
if [ "$1" == "-?" ]; then
	echo "Usage:"
	echo "   ./get_server_details [-site $SITES_OPT] [-n JVM Name/Number or Number]"
	echo "                        [-s server IP Address] [-?]"
	echo "   Lists the host associated with a JVM Name/Number or "
	echo "   lists the JVM range for a server IP address"
	echo ""
	exit
fi

declare -a SERVERS

PREV=
OPTION=
SERVER_NUMBER=
SERVER_ADDR=
for i in $*
do
	if [ "$PREV" == "-n" ]; then
		if echo $i | egrep -q '^[0-9]+$'; then      
			SERVER_NUMBER=$i
		else
			if echo $i | egrep ${SITE}; then
				SERVER_NUMBER=${i#${SITE}}
				SERVER_NUMBER=${SERVER_NUMBER#0}
			else
				echo "Not a valid JVM name fpr this site"
				exit
			fi
		fi
		OPTION=N
	elif [ "$PREV" == "-s" ]; then
		SERVER_ADDR=$i
		OPTION=S
	fi
	PREV=$i
done

if [ "$SERVER_NUMBER" == "" ] && [ "$SERVER_ADDR" == "" ]; then
	echo "No JVM name or server ip specified"
	exit
fi

# Count the number of hosts defined
pushd .. > /dev/null 2>&1
SERVER_HOSTS=`getServerHosts`
popd
NUM_HOSTS=0
INDEX=0
for i in $SERVER_HOSTS; do
	let INDEX=NUM_HOSTS
	SERVERS[NUM_HOSTS]=$i
	let NUM_HOSTS=NUM_HOSTS+1
done

# Set the number of servers per host
let NUM_SERVERS_PER_HOST=NUM_SERVERS/NUM_HOSTS

# Set the number of servers
let NUM_SERVERS=NUM_SERVERS_PER_HOST*NUM_HOSTS

# Get the base number
let NUM=SERVER_NUMBER/NUM_SERVERS_PER_HOST

# Get the base remainder
let REMAINDER=SERVER_NUMBER%NUM_SERVERS_PER_HOST

let INDEX=NUM

# If remainder greater than zero incrfement the index
if [ $REMAINDER != 0 ]; then
	let INDEX=INDEX+1
fi

if [ "$OPTION" == "N" ]; then
	echo ${SERVERS[$INDEX-1]}
else
    INDEX=0
	for i in $SERVER_HOSTS; do
		if [ "$i" == "$SERVER_ADDR" ]; then
			let INDEX=INDEX*NUM_SERVERS_PER_HOST+1
			if [ $INDEX -lt 10 ]; then
				SINDEX=00$INDEX
				JSINDEX=700$INDEX
				DSINDEX=800$INDEX
			elif [ $INDEX -lt 100 ]; then
				SINDEX=0$INDEX
				JSINDEX=70$INDEX
				DSINDEX=80$INDEX
			else
				SINDEX=$INDEX
				JSINDEX=7$INDEX
				DSINDEX=8$INDEX
			fi
			let INDEX=INDEX+NUM_SERVERS_PER_HOST-1
			if [ $INDEX -lt 10 ]; then
				EINDEX=00$INDEX
				JEINDEX=700$INDEX
				DEINDEX=800$INDEX
			elif [ $INDEX -lt 100 ]; then
				EINDEX=0$INDEX
				JEINDEX=70$INDEX
				DEINDEX=80$INDEX
			else
				JEINDEX=7$INDEX
				DEINDEX=8$INDEX
			fi
			echo JVMS ${SITE}$SINDEX-${SITE}$EINDEX
			echo JMX Remote Ports: $JSINDEX-$JEINDEX
			echo Debug Ports: $DSINDEX-$DEINDEX
			exit
		fi
		let INDEX=INDEX+1
	done
fi
