#!/bin/bash
 
# ========================================================================
# Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================
 
pushd .. > /dev/null 2>&1
. ./setenv.sh > /dev/null 2>&1
. ./all_env.sh > /dev/null 2>&1
. ./argenv.sh > /dev/null 2>&1
. ${GRIDS_DIR}/${GRID}/site_${SITE}.sh > /dev/null 2>&1
popd > /dev/null 2>&1

# Check for script help
if [ "$1" == "-?" ]; then
   echo "Usage:"
   echo "   ./exec [-all] [-grid $GRIDS_OPT] [-site $SITE_OPT] \"<commands>\" [-debug] [-?]"
   echo "   Executes the specified command on all but this host"
   echo "   unless the -all option is used."
   echo ""
   echo "      \"<commands>\" Remote commands separated by ';' to execute."
   echo "                   Commands must be in quotes."
   echo "      -all         Execute <command> in all hosts. If not specified,"
   echo "                   the command is not executed in this host."
   echo "      -debug       Print exec commands but do not execute them."
   echo ""
   echo "   Default: ./exec -grid $GRID_DEFAULT -site $SITE_DEFAULT <command>"
   echo ""
   exit
fi
 
if [ "$DEBUG" == "true" ]; then
        echo ""
        echo "Debug mode (-debug). The following commands are"
        echo "for display only. Commands are not executed."
        echo ""
fi

COMMAND=
for i in $*
do
   if [[ "$i" == "${SITE}" ]]; then
       if [ -z $SITE_SPECIFIED ]; then
          COMMAND="$COMMAND $i"
       fi
   elif [[ "$i" != "-site" ]] && [[ "$i" != "-all" ]] && [[ "$i" != "-debug" ]]; then 
      COMMAND="$COMMAND $i"
   fi
done

# For each server defined run command
pushd .. > /dev/null 2>&1
SERVER_HOSTS=`getServerHosts`
popd
for i in $SERVER_HOSTS; do
        HOST_NAME=`ssh -q -n $SSH_USER@$i "hostname"`
        if [ $HOST_NAME == `hostname` ]; then
                continue
        fi
 
        echo "----------$i----------"
        echo
        if [ "$DEBUG" == "true" ]; then
                echo ssh -q -n $SSH_USER@$i -o stricthostkeychecking=no $COMMAND
        else
                echo ssh -q -n $SSH_USER@$i -o stricthostkeychecking=no $COMMAND
                ssh -q -n $SSH_USER@$i -o stricthostkeychecking=no $COMMAND
        fi
        echo
done
