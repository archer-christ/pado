#!/bin/bash

# ========================================================================
# Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

. ./setenv.sh > /dev/null 2>&1
. ./all_env.sh > /dev/null 2>&1
. ./argenv.sh > /dev/null 2>&1

if [ "$HELP" == "true" ]; then
   echo "Usage:"
   echo "Do NOT run this command while servers are running."
   echo "It will remove the log and stats files."
   echo "   clean_site [-grid $GRIDS_OPT] [-site $SITES_OPT] [-all] [-locators] [-persist] [-?]"
   echo ""
   echo "      -grid      Removes log and stats files generated in the specified grid"
   echo "                 Default: ${GRID_DEFAULT}"
   echo "      -site      Removes log and stats files generated in the specified site"
   echo "                 Default: ${SITE_DEFAULT}"
   echo "      -all       Removes all files in the specified grid and site"
   echo "      -locators  Removes locator files in addition to server files"
   echo "      -persist   Removes persistent files generated by servers"
   echo "      -pid       Removes cache server pid files (.cacheserver.ser) This option may"
   echo "                 be required if servers crashed or killed without properly cleaning"
   echo "                 up resources. Note that -persist removes pid files along with other"
   echo "                 persistent files."
   echo ""
   echo "   Default: clean_site -grid $GRID_DEFAULT -site $SITE_DEFAULT"
   echo ""
   exit
fi

. ${GRIDS_DIR}/${GRID}/site_${SITE}.sh > /dev/null 2>&1

#
# Clean locators
#

if [ "$LOCATORS" == "true" ]; then
   # LocatorArray elements:
   #    array[0] LocatorNumber
   #    array[1] LocatorHost
   #    array[2] LocatorPort
   #    array[3] JmxRmiPort
   #    array[4] JmxHttpPort
   setLineArray $GRIDS_DIR/$GRID/locator_${SITE}.sh

   for (( i = 1; i <= $LAST_SERVER_NUM; i++ ))
   do
      line="${LineArray[$i]}"
      array=($line)
      LOCATOR_NUM=${array[0]}
      if [ "$LOCATOR_NUM" == "" ]; then
         continue;
      fi
      LOCATOR_HOST=${array[1]}
      ssh -q -n $SSH_USER@$LOCATOR_HOST "cd $REMOTE_BASE_DIR/bin_sh; ./clean_locator_local -grid $GRID -site ${SITE} -num $LOCATOR_NUM $*; "
   done
   sleep 5
fi

#
# Clean servers
#

# ServerArray elements:
#   array[0] ServerNumber
#   array[1] ServerHost
#   array[2] ServerPort
#   array[3] DebugPort
#   array[4] JmxPort
setLineArray $GRIDS_DIR/$GRID/server_${SITE}.sh

for (( i = 1; i <= $LAST_SERVER_NUM; i++ ))
do
   line="${LineArray[$i]}"
   array=($line)
   SERVER_NUM=${array[0]}
   if [ "$SERVER_NUM" == "" ]; then
      continue;
   fi
   SERVER_HOST=${array[1]}
   ssh -q -n $SSH_USER@$SERVER_HOST "cd $REMOTE_BASE_DIR/bin_sh; ./clean_server_local -num $SERVER_NUM -pid -grid $GRID -site ${SITE} $*; "
done

if [ "$PERSIST" == "true" ]; then
   echo "Removed grid: $GRID, site: $SITE, log, stats, and persistent files"
else 
   echo "Removed grid: $GRID, site: $SITE, log and stats files"
fi
