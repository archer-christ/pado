#!/bin/bash

# ========================================================================
# Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

. ./setenv.sh > /dev/null 2>&1
. ./all_env.sh > /dev/null 2>&1
. ./argenv.sh > /dev/null 2>&1

if [ "$HELP" == "true" ]; then
   echo "Usage:"
   echo "   start_server [-num <server number>] [-grid $GRIDS_OPT] [-site $SITES_OPT] [-gateway [<xml-file-path>]] [-rebalance] [-?]"
   echo ""
   echo "   Starts a server in the specified grid and site. This is a local command."
   echo "   It must be executed in the host where the server is running. To start"
   echo "   a remote server, run the start_server command instead."
   echo ""
   echo "      <server number> Server number 1-99"
   echo "      -grid      Starts the server in the specified grid. Default: ${GRID_DEFAULT}"
   echo "      -site      Starts the server in the specified site. Default: ${SITE_DEFAULT}"
   echo ""
   echo "   Default: start_server -num 1 -grid $GRID_DEFAULT -site $SITE_DEFAULT"
   echo ""
   exit
fi

. ${GRIDS_DIR}/${GRID}/site_${SITE}.sh > /dev/null 2>&1

# locators
LOCATORS=`getGemfireLocators`

#
# server.xml and gateway.xml
#
if [ "$GATEWAY" == "" ]; then
   CACHE_XML_FILE=$SERVER_XML_FILE
elif [ "$GATEWAY_XML_FILE" == "" ]; then
   CACHE_XML_FILE=$SERVER_GATEWAY_XML_FILE
else
   CACHE_XML_FILE=$ETC_GRID_DIR/$GATEWAY_XML_FILE
fi

# the parent directory of all servers 
if [ "$RUN_DIR" == "" ]; then
   RUN_DIR=$BASE_DIR/run
fi
# directory in which the server is to be run
DIR=$RUN_DIR/${SERVER_ID}
if [ ! -d $DIR ]; then
  mkdir -p $DIR
fi

# log directory
if [ "$LOG_DIR" == "" ]; then
   LOG_DIR=$BASE_DIR/log
fi
if [ ! -d $LOG_DIR ]; then
  mkdir -p $LOG_DIR
fi

# stats directory
if [ "$STATS_DIR" == "" ]; then
   STATS_DIR=$BASE_DIR/stats
fi
if [ ! -d $STATS_DIR ]; then
  mkdir -p $STATS_DIR
fi

# disk-store directory
if [ "$DISK_STORE_DIR" == "" ]; then
   DISK_STORE_DIR=$DIR/store
fi
if [ ! -d $DISK_STORE_DIR ]; then
  mkdir -p $DISK_STORE_DIR
fi
if [ ! -d $DISK_STORE_DIR/cache ]; then
  mkdir -p $DISK_STORE_DIR/cache
fi
if [ ! -d $DISK_STORE_DIR/gateway ]; then
  mkdir -p $DISK_STORE_DIR/gateway
fi
export DISK_STORE_DIR

# plugins directory
if [ "$PADO_PLUGINS_DIR" == "" ]; then
   PADO_PLUGINS_DIR=$BASE_DIR/plugins
fi
if [ ! -d $PADO_PLUGINS_DIR ]; then
  mkdir -p $PADO_PLUGINS_DIR
fi
# db directory
if [ "$PADO_DB_DIR" == "" ]; then
   PADO_DB_DIR=$BASE_DIR/db
fi
if [ ! -d $PADO_DB_DIR ]; then
  mkdir -p $PADO_DB_DIR
fi
# vp directory
if [ ! -d $PADO_DB_DIR/vp ]; then
  mkdir -p $PADO_DB_DIR/vp
fi

# etc directories env passed into Pado
export PADO_ETC_DIR=$ETC_DIR
export PADO_ETC_GRID_DIR=$ETC_GRID_DIR

# ServerArray elements:
#   array[0] ServerNumber
#   array[1] ServerHost
#   array[2] ServerPort
#   array[3] DebugPort
#   array[4] JmxPort
#   array[5] IsGateWay
setLineArray $GRIDS_DIR/$GRID/server_${SITE}.sh
line="${LineArray[$SERVER_NUM_NO_LEADING_ZERO]}"
array=($line)

SERVER_PORT=${array[2]}
DEBUG_PORT=${array[3]}
JMX_PORT=${array[4]}

SERVER_NAME=${GRID}-${SITE}-${SERVER_NUM}
LOG_FILE=${LOG_DIR}/${SERVER_ID}.log
STATS_FILE=${STATS_DIR}/${SERVER_ID}.gfs

#SERVER_PROPERTIES=-server-port=$SERVER_PORT
SERVER_PROPERTIES="-disable-default-server -J-Dgfinit.cacheserver.1.port=$SERVER_PORT -J-Dgfinit.cacheserver.1.notify-by-subscription=true -J-Dgfinit.cacheserver.1.socket-buffer-size=131072"

# The following environment variables are defined in the scripts 
# and may be used in server.xml.
#    GRID - Grid ID.
#    SITE - Site name. This name should be used to configure gateways.
#    SERVER_PORT - Cache server port number for <cache-server port=${SERVER_PORT}" 
#    SERVER_BIND_ADDRESS - Cache server bind address
#    CLIENT_BIND_ADDRESS - Hostname for clients
#    DISK_STORE_DIR - Disk store directory path
#
# Example:
#    <cache-server port="${SERVER_PORT}"
#                  bind-address="${SERVER_BIND_ADDRESS}"
#                  hostname-for-clients="${CLIENT_BIND_ADDRESS}" />
#    <disk-store name="disk-store">
#       <disk-dirs>
#           <disk-dir>${DISK_STORE_DIR}/<disk-dir>
#       </disk-dirs>
#    </disk-store>

GEMFIRE_PROPERTIES="name=$SERVER_NAME log-file=${LOG_FILE} statistic-archive-file=$STATS_FILE cache-xml-file=$CACHE_XML_FILE locators=${LOCATORS} -J-Dgemfire.distributed-system-id=${SYSTEM_ID} -J-DSITE=${SITE} -J-DDISK_STORE_DIR=${DISK_STORE_DIR} -J-DREMOTE_SYSTEM_ID_1=${REMOTE_SYSTEM_ID_1} -J-DREMOTE_SYSTEM_ID_2=${REMOTE_SYSTEM_ID_2} -J-Dgemfire.PREFER_SERIALIZED=false -J-Dgemfire.BucketRegion.alwaysFireLocalListeners=false"
#GEMFIRE_PROPERTIES="name=$SERVER_NAME log-file=${LOG_FILE} statistic-archive-file=$STATS_FILE cache-xml-file=$CACHE_XML_FILE locators=${LOCATORS} -J-Dgemfire.PREFER_SERIALIZED=true -J-Dgemfire.BucketRegion.alwaysFireLocalListeners=false"
#GEMFIRE_PROPERTIES="name=$SERVER_NAME log-file=${LOG_FILE} statistic-archive-file=$STATS_FILE cache-xml-file=$CACHE_XML_FILE locators=${LOCATORS} -J-Dgemfire.PREFER_DESERIALIZED=false -J-Dgemfire.BucketRegion.alwaysFireLocalListeners=false"
#GEMFIRE_PROPERTIES="name=$SERVER_NAME log-file=${LOG_FILE} cache-xml-file=$CACHE_XML_FILE locators=${LOCATORS} -J-Dgemfire.PREFER_SERIALIZED=true -J-Dgemfire.PREFER_DESERIALIZED=false -J-Dgemfire.BucketRegion.alwaysFireLocalListeners=false"

if [ "$GEMFIRE_PROPERTY_FILE" == "" ]; then
   GEMFIRE_PROPERTY_FILE=$ETC_GRID_DIR/server.properties
fi
if [ "$GEMFIRE_SECURITY_PROPERTY_FILE" == "" ]; then
   GEMFIRE_SECURITY_PROPERTY_FILE=$ETC_GRID_DIR/gfsecurity.properties
fi

#
# Check if security is enabled
#
GEMFIRE_SECURITY_PROPERTY_SYSTEM=
if [ -f $GEMFIRE_SECURITY_PROPERTY_FILE ]; then
   if [ "$SECURITY_ENABLED" == "true" ]; then
      GEMFIRE_SECURITY_PROPERTY_SYSTEM=-J-DgemfireSecurityPropertyFile=$GEMFIRE_SECURITY_PROPERTY_FILE
   fi
else
   if [ "$SECURITY_ENABLED" == "true" ]; then
      echo ""
      echo "Security is enabled but the following security file does not exist:"
      echo "   $GEMFIRE_SECURITY_PROPERTY_FILE"
      echo "start_server Aborted."
      echo ""
      exit
   fi
fi
if [ "$SECURITY_ENABLED" == "true" ]; then
   SECURITY_PROPERTIES=-J-Dpado.security.enabled=true
else
   SECURITY_PROPERTIES=-J-Dpado.security.enabled=false
fi

if [ "$SECURITY_ENABLED" == "true" ]; then
   GEMFIRE_SECURITY_PROPERTY_SYSTEM="$GEMFIRE_SECURITY_PROPERTY_SYSTEM -J-Dgemfire.security-client-authenticator=com.netcrest.pado.gemfire.security.PadoAuthenticator.create -J-Dgemfire.security-client-accessor=com.netcrest.pado.gemfire.security.PadoAuthorization.create -J-Dgemfire.security-client-auth-init=com.netcrest.pado.gemfire.security.PadoAuthInit.create"
fi

SECURITY_PROPERTIES="$SECURITY_PROPERTIES $GEMFIRE_SECURITY_PROPERTY_SYSTEM"

if [ "$GRID_ID" == "" ]; then
   GRID_ID=$GRID
fi
if [ "$GRID_NAME" == "" ]; then
   GRID_NAME=$GRID
fi
if [ "$SITE_ID" == "" ]; then
   SITE_ID=$SITE
fi
if [ "$SITE_NAME" == "" ]; then
   SITE_NAME=$SITE
fi

# 
# Application specifics 
#
# List all application specific properties here. Make sure to
# use the prefix "-J-D", e.g., APP_PROPERTIES=-J-Dfoo.test=true
# APP_PROPERTIES should be set in setenv.sh.
# 
APP_PROPERTIES=$APP_PROPERTIES

# 
# Pado specifics
#
PADO_PROPERTIES="-J-Dpado.grid.id=$GRID_ID -J-Dpado.grid.name=$GRID_NAME -J-Dpado.site.id=$SITE_ID -J-Dpado.site.name=$SITE_NAME -J-Dpado.plugins.dir=$PADO_PLUGINS_DIR -J-Dpado.etc.dir=$ETC_DIR -J-Dpado.etc.grid.dir=$ETC_GRID_DIR -J-Dpado.db.dir=$PADO_DB_DIR -J-Dpado.properties=$PADO_PROPERTY_FILE -J-Dpado.appConfigDir=$PADO_APP_CONFIG_DIR -J-Dpado.server=true -J-Dpado.config-file=$PADO_CONFIG_FILE -J-Dpado.log.gridInfo=false -J-Dpado.lucene.ramDirectory=false -J-Dpado.lucene.builder.thread.count=1 -J-Dpado.index.pageSize=1000 -J-Djavax.xml.accessExternalDTD=all"

#
# HEAP_MAX is set in grids/<grid-id>/site_<site-id>.sh
#
HEAPSIZE="-J-Xms${HEAP_MAX} -J-Xmx${HEAP_MAX}"

#
# GC paramenters
#
# GC_PARAMETERS="-J-XX:+UseParNewGC -J-XX:+UseConcMarkSweepGC -J-XX:+DisableExplicitGC -J-XX:NewSize=256m -J-XX:CMSInitiatingOccupancyFraction=50"
GC_PARAMETERS="-J-XX:+UseParNewGC -J-XX:+UseConcMarkSweepGC -J-XX:+DisableExplicitGC -J-XX:CMSInitiatingOccupancyFraction=50"

JMX_PARAMETERS="-J-Dcom.sun.management.jmxremote.port=${JMX_PORT} -J-Dcom.sun.management.jmxremote.ssl=false -J-Dcom.sun.management.jmxremote.authenticate=false"

#
# Debug parameters.
#
if [ "$DEBUG_ENABLED" == "true" ]; then
   DEBUG="-J-Xdebug -J-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${DEBUG_PORT}"
else
   DEBUG=
fi

echo "*****************************************************"
if [ "$GATEWAY" == "" ]; then
   echo "Starting $SERVER_ID on host $MY_ADDRESS..."
else
   echo "Starting gateway ${SERVER_ID} on host $MY_ADDRESS..."
fi
echo "*****************************************************"

echo cacheserver start -dir=$DIR -J-Dpado.vm.id=${SERVER_ID} -J-Dpado.home.dir=$PADO_HOME -J-Djava.awt.headless=true $HEAPSIZE $GC_PARAMETERS $JMX_PARAMETERS $DEBUG -J-DgemfirePropertyFile=$GEMFIRE_PROPERTY_FILE $SECURITY_PROPERTIES $SERVER_PROPERTIES $GEMFIRE_PROPERTIES $PADO_PROPERTIES $APP_PROPERTIES $REBALANCE
cacheserver start -dir=$DIR -J-Dpado.vm.id=${SERVER_ID} -J-Dpado.home.dir=$PADO_HOME -J-Djava.awt.headless=true $HEAPSIZE $GC_PARAMETERS $JMX_PARAMETERS $DEBUG -J-DgemfirePropertyFile=$GEMFIRE_PROPERTY_FILE $SECURITY_PROPERTIES $SERVER_PROPERTIES $GEMFIRE_PROPERTIES $PADO_PROPERTIES $APP_PROPERTIES $REBALANCE

# ------------------
# gfsh specifics
# ------------------
HEAPSIZE="--J=-Xms${HEAP_MAX} --J=-Xmx${HEAP_MAX}"
GC_PARAMETERS="--J=-XX:+UseParNewGC --J=-XX:+UseConcMarkSweepGC --J=-XX:+DisableExplicitGC --J=-XX:CMSInitiatingOccupancyFraction=50"
JMX_PARAMETERS="--J=-Dcom.sun.management.jmxremote.port=${JMX_PORT} --J=-Dcom.sun.management.jmxremote.ssl=false --J=-Dcom.sun.management.jmxremote.authenticate=false"
DEBUG="--J=-Xdebug --J=\"-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${DEBUG_PORT}\""
SERVER_PROPERTIES="--disable-default-server --J=-Dgfinit.cacheserver.1.port=$SERVER_PORT --J=-Dgfinit.cacheserver.1.notify-by-subscription=true --J=-Dgfinit.cacheserver.1.socket-buffer-size=131072"
GEMFIRE_PROPERTIES="--name=$SERVER_NAME --J=-Dgemfire.log-file=${LOG_FILE} --statistic-archive-file=$STATS_FILE --cache-xml-file=$CACHE_XML_FILE --locators=${LOCATORS} --J=-Dgemfire.distributed-system-id=${SYSTEM_ID} --J=-DSITE=${SITE} --J=-DDISK_STORE_DIR=${DISK_STORE_DIR} --J=-DREMOTE_SYSTEM_ID_1=${REMOTE_SYSTEM_ID_1} --J=-DREMOTE_SYSTEM_ID_2=${REMOTE_SYSTEM_ID_2} --J=-Dgemfire.PREFER_SERIALIZED=false --J=-Dgemfire.BucketRegion.alwaysFireLocalListeners=false"
APP_PROPERTIES="--J=--Djavax.net.ssl.trustStore=../../ldap/example/ssl/trusted.keystore"
PADO_PROPERTIES="--J=-Dpado.grid.id=$GRID_ID --J=-Dpado.grid.name=$GRID_NAME --J=-Dpado.site.id=$SITE_ID --J=-Dpado.site.name=$SITE_NAME --J=-Dpado.plugins.dir=$PADO_PLUGINS_DIR --J=-Dpado.etc.dir=$ETC_DIR --J=-Dpado.etc.grid.dir=$ETC_GRID_DIR --J=-Dpado.db.dir=$PADO_DB_DIR --J=-Dpado.properties=$PADO_PROPERTY_FILE --J=-Dpado.appConfigDir=$PADO_APP_CONFIG_DIR --J=-Dpado.server=true --J=-Dpado.config-file=$PADO_CONFIG_FILE --J=-Dpado.log.gridInfo=false --J=-Dpado.lucene.ramDirectory=false --J=-Dpado.lucene.builder.thread.count=1 --J=-Dpado.index.pageSize=1000"
