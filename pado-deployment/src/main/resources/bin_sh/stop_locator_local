#!/bin/bash

# ========================================================================
# Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

. ./setenv.sh > /dev/null 2>&1
. ./all_env.sh > /dev/null 2>&1
. ./argenv.sh > /dev/null 2>&1

if [ "$HELP" == "true" ]; then
   echo "Usage:"
   echo "   stop_locator_local [-num <locator-number>] [-grid $GRIDS_OPT] [-site $SITES_OPT] [-?]"
   echo ""
   echo "   Stops locator in the specified site of the specified grid."
   echo ""
   echo "      <locator number> Locator number 1-99 ($GRID-$SITE: `getLocatorNumberRange`)"
   echo "                       If the locator number is 'auto', i.e., -num auto, then"
   echo "                       the locator number is automatically determined."
   echo "      -grid      Stops the locator in the specified grid. Default: $GRID_DEFAULT"
   echo "      -site      Stops the locator in the specified site. Default: $SITE_DEFAULT"
   echo ""
   echo "   Default: stop_locator -num 1 -grid $GRID_DEFAULT -site $SITE_DEFAULT"
   echo ""
   exit
fi

. ${GRIDS_DIR}/${GRID}/site_${SITE}.sh > /dev/null 2>&1

# the parent directory of all servers
if [ "$RUN_DIR" == "" ]; then
   RUN_DIR=$BASE_DIR/run
fi

#
# If auto, then determine the locator number 
#
if [ "$SERVER_NUM" == "auto" ]; then
   #
   # Target host
   #
   # LocatorArray elements:
   #    array[0] LocatorNumber
   #    array[1] Host
   #    array[2] LocatorPort
   #    array[3] JmxRmiPort
   #    array[4] JmxHttpPort
   setLineArray $GRIDS_DIR/$GRID/locator_${SITE}.sh
   for (( i = 1; i <= $LAST_SERVER_NUM; i++ ))
   do
      line="${LineArray[$i]}"
      array=($line)
      SERVER_NUM=${array[0]}
      if [ "$SERVER_NUM" == "" ]; then
         continue;
      fi 
      if [ $SERVER_NUM -lt 10 ]; then
         SERVER_NUM=0$SERVER_NUM
      fi
      # Set SERVER_NUM_NO_LEADING_ZERO
      if [[ $SERVER_NUM == 0* ]]; then
         SERVER_NUM_NO_LEADING_ZERO=${SERVER_NUM:1};
      else
         SERVER_NUM_NO_LEADING_ZERO=$SERVER_NUM
      fi
      LOCATOR_HOST=${array[1]}
      if [ "$LOCATOR_HOST" == "localhost" ]; then
         LOCATOR_HOST=`hostname`
      fi
      LOCATOR_PORT=${array[2]}
      JMX_MANAGER_PORT=${array[3]}
      JMX_MANAGER_HTTP_PORT=${array[4]}
      LOCATOR_ID=locator-${GRID}-${SITE}${SERVER_NUM}

      # If locator is running then breakout to stop it
      locators=`$JAVA_HOME/bin/jps -v | grep "pado.home.dir=${PADO_HOME}" | grep "pado.vm.id=${LOCATOR_ID}" | grep java | awk '{print $1}'`
      lpids=""
      for j in $locators; do
         lpids="$j $lpids"
      done
      if [ "$lpids" != "" ]; then
          # Locator is running. Break out to stop it.
          echo "$LOCATOR_ID running. Stopping..."
          IS_LOCATOR_ALREADY_RUNNNIG=true
          break
      fi
      if [ "$LOCATOR_HOST" == "$MY_ADDRESS" ]; then
         break
      fi
   done
   if [ "$LOCATOR_HOST" != "$MY_ADDRESS" ]; then
      if [ "$IS_LOCATOR_ALREADY_RUNNNIG" != "true" ]; then
         echo "This host is not configured for locator. Aborted."
      fi
      exit
   fi
fi
# directory in which the locator to be run
DIR=$RUN_DIR/${LOCATOR_ID}
if [ ! -d $DIR ]; then
  mkdir -p $DIR
fi

pushd $DIR > /dev/null 2>&1
echo gfsh stop locator --dir=$DIR
gfsh stop locator --dir=$DIR > /dev/null 2>&1
popd > /dev/null 2>&1
