#!/bin/bash

# ========================================================================
# Copyright (c) 2013-2017 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

. ./setenv.sh > /dev/null 2>&1

if [ "$HELP" == "true" ]; then
   echo "Usage:"
   echo "   start_rpc_agent <server-id> [-?]"
   echo ""
   echo "   Default: start_rpc_agent <server-id mandatory>"
   echo ""
   exit
fi

if [ "$RUN_DIR" == "" ]; then
   RUN_DIR=$BASE_DIR
fi

# log directory
if [ "$LOG_DIR" == "" ]; then
   LOG_DIR=$BASE_DIR/log
fi
if [ ! -d $LOG_DIR ]; then
  mkdir -p $LOG_DIR
fi

# data directory
if [ "$DATA_DIR" == "" ]; then
   DATA_DIR=$BASE_DIR/data
fi
if [ ! -d $DATA_DIR ]; then
  mkdir -p $DATA_DIR
fi

if [ "$ETC_DIR" == "" ]; then
   ETC_DIR=$BASE_DIR/etc
fi

# directory in which the client is to be run
DIR=$RUN_DIR

# Set RPC_PROPERTY_FILE
RPC_PROPERTY_FILE=$ETC_DIR/rpc-agent.properties

# Server name
SERVER_NAME=$1

# 
# Application specifics 
#
# List all application specific properties here. Make sure to
# use the prefix "-J-D", e.g., APP_PROPERTIES=-J-Dfoo.test=true
# APP_PROPERTIES should be set in setenv.sh.
# 
APP_PROPERTIES=$APP_PROPERTIES

HEAPSIZE="-J-Xms${HEAP_MAX} -J-Xmx${HEAP_MAX}"
GC_PARAMETERS="-J-XX:+UseParNewGC -J-XX:+UseConcMarkSweepGC -J-XX:CMSInitiatingOccupancyFraction=75"

#JMX_PARAMETERS="-J-Dcom.sun.management.jmxremote.port=${JMX_PORT} -J-Dcom.sun.management.jmxremote.ssl=false -J-Dcom.sun.management.jmxremote.authenticate=false"

#
# Debug parameters.
#
if [ "$DEBUG_ENABLED" == "true" ]; then
   DEBUG="-J-Xdebug -J-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${DEBUG_PORT}"
else
   DEBUG=
fi

# Exit if it is already running
LANG=java
START_RPC_AGENT="com.netcrest.pado.rpc.client.RpcAgent $*"
pids=`ps -ewwwo pid,comm,args | grep "$START_RPC_AGENT" | grep java | awk '{print $1}'`
for i in $pids; do
   if [ "$agents" == "" ]; then
      agents=$i
   else
      agents="$agents $i"
   fi
done
if [ "$agents" != "" ]; then
   echo "$LANG: rpc agent already running [$agents]"
else
   pushd $BASE_DIR > /dev/null 2>&1
   echo "" >> log/rpc_agent-${SERVER_NAME}.log
   echo "================================================================" >> log/rpc_agent-${SERVER_NAME}.log
   echo "Pado RPC Agent" >> log/rpc_agent-${SERVER_NAME}.log
   echo "Data Node: ${SERVER_NAME}" >> log/rpc_agent-${SERVER_NAME}.log
   echo "Lang: java" >> log/rpc_agent-${SERVER_NAME}.log
   echo "Started: `date`" >> log/rpc_agent-${SERVER_NAME}.log
   echo "================================================================" >> log/rpc_agent-${SERVER_NAME}.log
   echo "$PADO_JAVA -DrpcPropertyFile=$RPC_PROPERTY_FILE $HEAP_SiZE com.netcrest.pado.rpc.client.RpcAgent $*" >> log/rpc_agent-${SERVER_NAME}.log
   echo "" >> log/rpc_agent-${SERVER_NAME}.log
   $PADO_JAVA -DrpcPropertyFile=$RPC_PROPERTY_FILE $HEAP_SiZE com.netcrest.pado.rpc.client.RpcAgent $* >> log/rpc_agent-${SERVER_NAME}.log 2>&1 &
   popd  > /dev/null 2>&1
   pids=`ps -ewwwo pid,comm,args | grep "$START_RPC_AGENT" | grep java | awk '{print $1}'`
   for i in $pids; do
      if [ "$agents" == "" ]; then
         agents=$i
      else
         agents="$agents $i"
      fi
   done
   echo "$LANG: rpc agent started [$agents]"
fi
